Index: src/main/java/com/company/cinema/screen/session/SessionEdit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.cinema.screen.session;\r\n\r\nimport io.jmix.ui.screen.*;\r\nimport com.company.cinema.entity.Session;\r\n\r\n@UiController(\"Session_.edit\")\r\n@UiDescriptor(\"session-edit.xml\")\r\n@EditedEntityContainer(\"sessionDc\")\r\npublic class SessionEdit extends StandardEditor<Session> {\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/company/cinema/screen/session/SessionEdit.java b/src/main/java/com/company/cinema/screen/session/SessionEdit.java
--- a/src/main/java/com/company/cinema/screen/session/SessionEdit.java	(revision b1a71be0de7f25e950db8994c6ce6b54bde2c734)
+++ b/src/main/java/com/company/cinema/screen/session/SessionEdit.java	(date 1657497091472)
@@ -1,10 +1,92 @@
 package com.company.cinema.screen.session;
 
+import com.company.cinema.entity.Seat;
+import com.company.cinema.entity.Ticket;
+import io.jmix.core.EntityStates;
+import io.jmix.ui.Notifications;
+import io.jmix.core.DataManager;
+import io.jmix.ui.component.Button;
 import io.jmix.ui.screen.*;
 import com.company.cinema.entity.Session;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Component;
+
+import java.util.List;
 
 @UiController("Session_.edit")
 @UiDescriptor("session-edit.xml")
 @EditedEntityContainer("sessionDc")
 public class SessionEdit extends StandardEditor<Session> {
-}
\ No newline at end of file
+    @Autowired
+    private DataManager dataManager;
+    @Autowired
+    private Notifications notifications;
+    @Autowired
+    private EntityStates entityStates;
+
+
+    @Subscribe
+    public void onBeforeCommitChanges(BeforeCommitChangesEvent event){
+        if (entityStates.isNew(getEditedEntity())){
+            int sessionDuration = (getEditedEntity().getEndTime().getHour()*60+getEditedEntity().getEndTime().getMinute()
+                    - getEditedEntity().getStartTime().getHour()*60+getEditedEntity().getStartTime().getMinute());
+            if (sessionDuration < getEditedEntity().getFilm().getDuration()){
+                notifications.create().withCaption("The duration of the session is shorter than the duration of the film").show();
+                event.preventCommit();
+            }
+            else event.resume();
+            createTickets(getEditedEntity());
+        }
+        /*if (entityStates.isDeleted(getEditedEntity())){
+            if (checkTicketsBeforeDelete(getEditedEntity())){
+                deleteTicketsBeforeDelete(getEditedEntity());
+            }else{
+                notifications.create().withCaption("A session cannot be deleted if at least 1 ticket has already been sold").show();
+                event.preventCommit();
+            }
+
+        }*/
+    }
+
+    @Subscribe
+    public void onAfterCommitChanges(AfterCommitChangesEvent event){
+
+    }
+
+    private void createTickets(Session x){
+        List<Seat> seatInCinemaHall = dataManager.load(Seat.class)
+                .query("select c from Seat c where c.cinemaHall=:x")
+                .parameter("x", x.getCinemaHall())
+                .list();
+        for (int i = 0; i < seatInCinemaHall.size(); i++) {
+            Ticket newTicket = dataManager.create(Ticket.class);
+            newTicket.setSession(x);
+            newTicket.setSeat(seatInCinemaHall.get(i));
+            newTicket.setCost(seatInCinemaHall.get(i).getDefaultCost());
+            dataManager.save(newTicket);
+        }
+    }
+    private boolean checkTicketsBeforeDelete(Session x){
+        List<Ticket> tickets = dataManager.load(Ticket.class)
+                .query("select c from Ticket c where c.session=:session and not c.client=:null")
+                .parameter("x", x.getCinemaHall())
+                .parameter("session", x)
+                .list();
+        if (tickets.size() > 0){
+            return true;
+        }
+        return false;
+    }
+    private void deleteTicketsBeforeDelete(Session x){
+        List<Ticket> tickets = dataManager.load(Ticket.class)
+                .query("select c from Ticket c where c.session=:session and not c.client=:null")
+                //.parameter("x", x.getCinemaHall())
+                .parameter("session", x)
+                .list();
+        for (int i = 0; i < tickets.size(); i++) {
+            dataManager.remove(tickets.get(i));
+        }
+    }
+
+
+}
Index: src/main/java/com/company/cinema/entity/Session.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.cinema.entity;\r\n\r\nimport io.jmix.core.entity.annotation.JmixGeneratedValue;\r\nimport io.jmix.core.metamodel.annotation.DependsOnProperties;\r\nimport io.jmix.core.metamodel.annotation.InstanceName;\r\nimport io.jmix.core.metamodel.annotation.JmixEntity;\r\n\r\nimport javax.persistence.*;\r\nimport javax.validation.constraints.NotNull;\r\nimport java.time.LocalDateTime;\r\nimport java.util.UUID;\r\n\r\n@JmixEntity\r\n@Table(name = \"SESSION_\", indexes = {\r\n        @Index(name = \"IDX_SESSION_CINEMA_HALL_ID\", columnList = \"CINEMA_HALL_ID\"),\r\n        @Index(name = \"IDX_SESSION_FILM_ID\", columnList = \"FILM_ID\")\r\n})\r\n@Entity(name = \"Session_\")\r\npublic class Session {\r\n    @JmixGeneratedValue\r\n    @Column(name = \"ID\", nullable = false)\r\n    @Id\r\n    private UUID id;\r\n\r\n    @JoinColumn(name = \"CINEMA_HALL_ID\")\r\n    @ManyToOne(fetch = FetchType.LAZY)\r\n    private CinemaHall cinemaHall;\r\n\r\n    @JoinColumn(name = \"FILM_ID\")\r\n    @ManyToOne(fetch = FetchType.LAZY)\r\n    private Film film;\r\n\r\n    @Column(name = \"START_TIME\", nullable = false)\r\n    @NotNull\r\n    private LocalDateTime startTime;\r\n\r\n    @Column(name = \"END_TIME\", nullable = false)\r\n    @NotNull\r\n    private LocalDateTime endTime;\r\n\r\n    public Film getFilm() {\r\n        return film;\r\n    }\r\n\r\n    public void setFilm(Film film) {\r\n        this.film = film;\r\n    }\r\n\r\n    public CinemaHall getCinemaHall() {\r\n        return cinemaHall;\r\n    }\r\n\r\n    public void setCinemaHall(CinemaHall cinemaHall) {\r\n        this.cinemaHall = cinemaHall;\r\n    }\r\n\r\n    public LocalDateTime getEndTime() {\r\n        return endTime;\r\n    }\r\n\r\n    public void setEndTime(LocalDateTime endTime) {\r\n        this.endTime = endTime;\r\n    }\r\n\r\n    public LocalDateTime getStartTime() {\r\n        return startTime;\r\n    }\r\n\r\n    public void setStartTime(LocalDateTime startTime) {\r\n        this.startTime = startTime;\r\n    }\r\n\r\n    public UUID getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(UUID id) {\r\n        this.id = id;\r\n    }\r\n\r\n    @InstanceName\r\n    @DependsOnProperties({\"cinemaHall\", \"film\", \"startTime\", \"endTime\"})\r\n    public String getInstanceName() {\r\n        return String.format(\"%s, %s min, %s %s %s:%s - %s:%s\", cinemaHall.getInstanceName(), film.getInstanceName(), startTime.getDayOfMonth(), startTime.getMonth(), startTime.getHour() , startTime.getMinute(), endTime.getHour() , endTime.getMinute());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/company/cinema/entity/Session.java b/src/main/java/com/company/cinema/entity/Session.java
--- a/src/main/java/com/company/cinema/entity/Session.java	(revision b1a71be0de7f25e950db8994c6ce6b54bde2c734)
+++ b/src/main/java/com/company/cinema/entity/Session.java	(date 1657499415866)
@@ -10,6 +10,7 @@
 import java.time.LocalDateTime;
 import java.util.UUID;
 
+
 @JmixEntity
 @Table(name = "SESSION_", indexes = {
         @Index(name = "IDX_SESSION_CINEMA_HALL_ID", columnList = "CINEMA_HALL_ID"),
@@ -17,6 +18,21 @@
 })
 @Entity(name = "Session_")
 public class Session {
+
+    /*@DeletedBy
+    @Column(name = "DELETED_BY")
+    private String deletedBy;
+
+    @DeletedDate
+    @Temporal(TemporalType.DATE)
+    @Column(name = "DELETED_DATE")
+    private Date deletedDate;
+
+    @OnDelete(DeletePolicy.CASCADE)
+    @Composition
+    @OneToMany (mappedBy = "")*/
+
+
     @JmixGeneratedValue
     @Column(name = "ID", nullable = false)
     @Id
@@ -83,4 +99,5 @@
     public String getInstanceName() {
         return String.format("%s, %s min, %s %s %s:%s - %s:%s", cinemaHall.getInstanceName(), film.getInstanceName(), startTime.getDayOfMonth(), startTime.getMonth(), startTime.getHour() , startTime.getMinute(), endTime.getHour() , endTime.getMinute());
     }
+
 }
\ No newline at end of file
Index: src/main/java/com/company/cinema/entity/Ticket.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.cinema.entity;\r\n\r\nimport io.jmix.core.entity.annotation.JmixGeneratedValue;\r\nimport io.jmix.core.metamodel.annotation.DependsOnProperties;\r\nimport io.jmix.core.metamodel.annotation.InstanceName;\r\nimport io.jmix.core.metamodel.annotation.JmixEntity;\r\n\r\nimport javax.persistence.*;\r\nimport java.math.BigDecimal;\r\nimport java.util.UUID;\r\n\r\n@JmixEntity\r\n@Table(name = \"TICKET\", indexes = {\r\n        @Index(name = \"IDX_TICKET_SESSION_ID\", columnList = \"SESSION_ID\"),\r\n        @Index(name = \"IDX_TICKET_SEAT_ID\", columnList = \"SEAT_ID\"),\r\n        @Index(name = \"IDX_TICKET_CLIENT_ID\", columnList = \"CLIENT_ID\")\r\n})\r\n@Entity\r\npublic class Ticket {\r\n    @JmixGeneratedValue\r\n    @Column(name = \"ID\", nullable = false)\r\n    @Id\r\n    private UUID id;\r\n\r\n    @JoinColumn(name = \"SESSION_ID\")\r\n    @ManyToOne(fetch = FetchType.LAZY)\r\n    private Session session;\r\n\r\n    @JoinColumn(name = \"SEAT_ID\")\r\n    @ManyToOne(fetch = FetchType.LAZY)\r\n    private Seat seat;\r\n\r\n    @Column(name = \"COST\", precision = 19, scale = 2)\r\n    private BigDecimal cost;\r\n\r\n    @JoinColumn(name = \"CLIENT_ID\")\r\n    @ManyToOne(fetch = FetchType.LAZY)\r\n    private Client client;\r\n\r\n    public Client getClient() {\r\n        return client;\r\n    }\r\n\r\n    public void setClient(Client client) {\r\n        this.client = client;\r\n    }\r\n\r\n    public Seat getSeat() {\r\n        return seat;\r\n    }\r\n\r\n    public void setSeat(Seat seat) {\r\n        this.seat = seat;\r\n    }\r\n\r\n    public Session getSession() {\r\n        return session;\r\n    }\r\n\r\n    public void setSession(Session session) {\r\n        this.session = session;\r\n    }\r\n\r\n    public BigDecimal getCost() {\r\n        return cost;\r\n    }\r\n\r\n    public void setCost(BigDecimal cost) {\r\n        this.cost = cost;\r\n    }\r\n\r\n    public UUID getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(UUID id) {\r\n        this.id = id;\r\n    }\r\n\r\n    @InstanceName\r\n    @DependsOnProperties({\"client\", \"cost\", \"seat\", \"session\"})\r\n    public String getInstanceName() {\r\n        return String.format(\"%s, %s, %s, %s\", client, cost, seat, session);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/company/cinema/entity/Ticket.java b/src/main/java/com/company/cinema/entity/Ticket.java
--- a/src/main/java/com/company/cinema/entity/Ticket.java	(revision b1a71be0de7f25e950db8994c6ce6b54bde2c734)
+++ b/src/main/java/com/company/cinema/entity/Ticket.java	(date 1657499878980)
@@ -1,6 +1,8 @@
 package com.company.cinema.entity;
 
+import io.jmix.core.DeletePolicy;
 import io.jmix.core.entity.annotation.JmixGeneratedValue;
+import io.jmix.core.entity.annotation.OnDeleteInverse;
 import io.jmix.core.metamodel.annotation.DependsOnProperties;
 import io.jmix.core.metamodel.annotation.InstanceName;
 import io.jmix.core.metamodel.annotation.JmixEntity;
@@ -11,19 +13,21 @@
 
 @JmixEntity
 @Table(name = "TICKET", indexes = {
-        @Index(name = "IDX_TICKET_SESSION_ID", columnList = "SESSION_ID"),
         @Index(name = "IDX_TICKET_SEAT_ID", columnList = "SEAT_ID"),
-        @Index(name = "IDX_TICKET_CLIENT_ID", columnList = "CLIENT_ID")
+        @Index(name = "IDX_TICKET_CLIENT_ID", columnList = "CLIENT_ID"),
+        @Index(name = "IDX_TICTETSONSESSION", columnList = "TICKET_ID")
 })
 @Entity
 public class Ticket {
+
     @JmixGeneratedValue
     @Column(name = "ID", nullable = false)
     @Id
     private UUID id;
 
-    @JoinColumn(name = "SESSION_ID")
+    @OnDeleteInverse(DeletePolicy.DENY)
     @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "SESSION_ID")
     private Session session;
 
     @JoinColumn(name = "SEAT_ID")
@@ -82,4 +86,6 @@
     public String getInstanceName() {
         return String.format("%s, %s, %s, %s", client, cost, seat, session);
     }
+
+
 }
\ No newline at end of file
Index: src/main/java/com/company/cinema/listener/SessionEventListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.cinema.listener;\r\n\r\nimport com.company.cinema.entity.CinemaHall;\r\nimport com.company.cinema.entity.Seat;\r\nimport com.company.cinema.entity.Session;\r\nimport com.company.cinema.entity.Ticket;\r\nimport io.jmix.core.DataManager;\r\nimport io.jmix.core.event.EntitySavingEvent;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.context.event.EventListener;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n@Component\r\npublic class SessionEventListener {\r\n\r\n    @Autowired\r\n    private DataManager dataManager;\r\n\r\n    @EventListener\r\n    public void onSessionSaving(EntitySavingEvent<Session> event) {\r\n        if (event.isNewEntity()){\r\n            createTickets(event.getEntity());\r\n        }\r\n    }\r\n    private void createTickets(Session x){\r\n        List<Seat> seatInCinemaHall = dataManager.load(Seat.class)\r\n                .query(\"select c from Seat c \")\r\n                .list();//.stream().filter(e -> e.<Seat>getCinemaHall() == x.getCinemaHall());\r\n        Ticket newTicket = dataManager.create(Ticket.class);\r\n        newTicket.setSession(x);\r\n        newTicket.setSeat(seatInCinemaHall.get(0));\r\n        newTicket.setCost(seatInCinemaHall.get(0).getDefaultCost());\r\n        dataManager.save(newTicket);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/company/cinema/listener/SessionEventListener.java b/src/main/java/com/company/cinema/listener/SessionEventListener.java
--- a/src/main/java/com/company/cinema/listener/SessionEventListener.java	(revision b1a71be0de7f25e950db8994c6ce6b54bde2c734)
+++ b/src/main/java/com/company/cinema/listener/SessionEventListener.java	(date 1657494298282)
@@ -5,7 +5,11 @@
 import com.company.cinema.entity.Session;
 import com.company.cinema.entity.Ticket;
 import io.jmix.core.DataManager;
+import io.jmix.core.Id;
+import io.jmix.core.event.EntityChangedEvent;
 import io.jmix.core.event.EntitySavingEvent;
+import io.jmix.ui.Notifications;
+import liquibase.datatype.core.UUIDType;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.event.EventListener;
 import org.springframework.stereotype.Component;
@@ -13,27 +17,63 @@
 import java.time.LocalDateTime;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.UUID;
 
 @Component
 public class SessionEventListener {
 
     @Autowired
     private DataManager dataManager;
+    //@Autowired
+    //private Notifications notifications;
+
 
     @EventListener
-    public void onSessionSaving(EntitySavingEvent<Session> event) {
-        if (event.isNewEntity()){
-            createTickets(event.getEntity());
+    public void onSessionChangedAfterCommit(EntityChangedEvent<Session> event) {
+        if (event.getType() == EntityChangedEvent.Type.DELETED) {
+            if (checkTicketsBeforeDelete(event.getEntityId())) {
+                deleteTicketsBeforeDelete(event.getEntityId());
+            } else {
+                //notifications.create().withCaption("A session cannot be deleted if at least 1 ticket has already been sold").show();
+                //как-то отменить удаление
+            }
         }
     }
-    private void createTickets(Session x){
-        List<Seat> seatInCinemaHall = dataManager.load(Seat.class)
-                .query("select c from Seat c ")
-                .list();//.stream().filter(e -> e.<Seat>getCinemaHall() == x.getCinemaHall());
-        Ticket newTicket = dataManager.create(Ticket.class);
-        newTicket.setSession(x);
-        newTicket.setSeat(seatInCinemaHall.get(0));
-        newTicket.setCost(seatInCinemaHall.get(0).getDefaultCost());
-        dataManager.save(newTicket);
+
+    @EventListener
+    public void onSessionChangedBeforeCommit(EntityChangedEvent<Session> event) {
+        if (event.getType() == EntityChangedEvent.Type.DELETED) {
+            if (checkTicketsBeforeDelete(event.getEntityId())) {
+                deleteTicketsBeforeDelete(event.getEntityId());
+            } else {
+                //notifications.create().withCaption("A session cannot be deleted if at least 1 ticket has already been sold").show();
+                //как-то отменить удаление
+            }
+        }
     }
+
+    private boolean checkTicketsBeforeDelete(Id<Session> sessionId){
+        Session editedSession = dataManager.load(Session.class).id(sessionId).one();
+        List<Ticket> tickets = dataManager.load(Ticket.class)
+                .query("select c from Ticket c where c.session=:session and not c.client=:null")
+                .parameter("session", editedSession)
+                //.parameter("session", x)
+                .list();
+        if (tickets.size() > 0){
+            return true;
+        }
+        return false;
+    }
+    private void deleteTicketsBeforeDelete(Id<Session> sessionId){
+        Session editedSession = dataManager.load(Session.class).id(sessionId).one();
+        List<Ticket> tickets = dataManager.load(Ticket.class)
+                .query("select c from Ticket c where c.session=:session")
+                //.parameter("x", x.getCinemaHall())
+                .parameter("session", editedSession)
+                .list();
+        for (int i = 0; i < tickets.size(); i++) {
+            dataManager.remove(tickets.get(i));
+        }
+    }
+
 }
\ No newline at end of file
Index: build/resources/main/META-INF/build-info.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>build.artifact=cinema\r\nbuild.group=com.company\r\nbuild.name=cinema\r\nbuild.time=2022-07-04T16\\:41\\:53.372111200Z\r\nbuild.version=0.0.1-SNAPSHOT\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build/resources/main/META-INF/build-info.properties b/build/resources/main/META-INF/build-info.properties
--- a/build/resources/main/META-INF/build-info.properties	(revision b1a71be0de7f25e950db8994c6ce6b54bde2c734)
+++ b/build/resources/main/META-INF/build-info.properties	(date 1657499497464)
@@ -1,5 +1,5 @@
 build.artifact=cinema
 build.group=com.company
 build.name=cinema
-build.time=2022-07-04T16\:41\:53.372111200Z
+build.time=2022-07-11T00\:31\:37.451183700Z
 build.version=0.0.1-SNAPSHOT
Index: src/main/resources/com/company/cinema/screen/blank/blank-screen.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/com/company/cinema/screen/blank/blank-screen.xml b/src/main/resources/com/company/cinema/screen/blank/blank-screen.xml
new file mode 100644
--- /dev/null	(date 1657500128370)
+++ b/src/main/resources/com/company/cinema/screen/blank/blank-screen.xml	(date 1657500128370)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<window xmlns="http://jmix.io/schema/ui/window"
+        caption="msg://blankScreen.caption">
+    <layout>
+    </layout>
+</window>
\ No newline at end of file
Index: src/main/resources/com/company/cinema/messages_ru_RU.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>localeDisplayName.ru_RU=Russian (Russia)\r\n\r\ndatabaseUniqueConstraintViolation.IDX_USER__ON_USERNAME=A user with the same username already exists\r\n\r\ncom.company.cinema.entity/CinemaHall=Cinema hall\r\ncom.company.cinema.entity/CinemaHall.description=Description\r\ncom.company.cinema.entity/CinemaHall.id=Id\r\ncom.company.cinema.entity/CinemaHall.name=Name\r\ncom.company.cinema.entity/Client=Client\r\ncom.company.cinema.entity/Client.fullName=Full name\r\ncom.company.cinema.entity/Client.id=Id\r\ncom.company.cinema.entity/Client.listOfTikets=List of tikets\r\ncom.company.cinema.entity/Client.ticket=Ticket\r\ncom.company.cinema.entity/Film=Фильм\r\ncom.company.cinema.entity/Film.description=Description\r\ncom.company.cinema.entity/Film.duration=Duration\r\ncom.company.cinema.entity/Film.id=Id\r\ncom.company.cinema.entity/Film.name=Name\r\ncom.company.cinema.entity/Seat=Seat\r\ncom.company.cinema.entity/Seat.cinemaHall=Cinema hall\r\ncom.company.cinema.entity/Seat.cinema_hall=Cinema hall\r\ncom.company.cinema.entity/Seat.default_cost=Default cost\r\ncom.company.cinema.entity/Seat.id=Id\r\ncom.company.cinema.entity/Seat.place_number=Place number\r\ncom.company.cinema.entity/Seat.row_number=Row number\r\ncom.company.cinema.entity/Session=Сеанс\r\ncom.company.cinema.entity/Session.cinemaHall=Кинозал\r\ncom.company.cinema.entity/Session.endTime=End time\r\ncom.company.cinema.entity/Session.film=Film\r\ncom.company.cinema.entity/Session.id=Id\r\ncom.company.cinema.entity/Session.startTime=Start time\r\ncom.company.cinema.entity/Ticket=Ticket\r\ncom.company.cinema.entity/Ticket.client=Client\r\ncom.company.cinema.entity/Ticket.cost=Cost\r\ncom.company.cinema.entity/Ticket.id=Id\r\ncom.company.cinema.entity/Ticket.seat=Seat\r\ncom.company.cinema.entity/Ticket.session=Session\r\ncom.company.cinema.entity/User=User\r\ncom.company.cinema.entity/User.active=Active\r\ncom.company.cinema.entity/User.email=Email\r\ncom.company.cinema.entity/User.firstName=First name\r\ncom.company.cinema.entity/User.id=ID\r\ncom.company.cinema.entity/User.lastName=Last name\r\ncom.company.cinema.entity/User.password=Password\r\ncom.company.cinema.entity/User.timeZoneId=Time zone\r\ncom.company.cinema.entity/User.username=Username\r\ncom.company.cinema.entity/User.version=Version\r\n\r\ncom.company.cinema.screen.cinemahall/cinemaHallBrowse.caption=Cinema halls\r\ncom.company.cinema.screen.cinemahall/cinemaHallBrowse.menu=Cinema halls\r\ncom.company.cinema.screen.cinemahall/cinemaHallEdit.caption=Cinema hall editor\r\n\r\ncom.company.cinema.screen.client/clientBrowse.caption=Clients\r\ncom.company.cinema.screen.client/clientBrowse.menu=Clients\r\ncom.company.cinema.screen.client/clientEdit.caption=Client editor\r\n\r\ncom.company.cinema.screen.film/filmBrowse.caption=Films\r\ncom.company.cinema.screen.film/filmBrowse.menu=Films\r\ncom.company.cinema.screen.film/filmEdit.caption=Film editor\r\n\r\ncom.company.cinema.screen.login/badCredentials = Unknown login name or bad password\r\ncom.company.cinema.screen.login/caption = Sample\r\ncom.company.cinema.screen.login/emptyUsernameOrPassword=Please enter user name and password\r\ncom.company.cinema.screen.login/loginButton = Submit\r\ncom.company.cinema.screen.login/loginFailed = Login failed\r\ncom.company.cinema.screen.login/loginScreen.rememberMe=Remember me\r\ncom.company.cinema.screen.login/passwordPlaceholder = Password\r\ncom.company.cinema.screen.login/usernamePlaceholder = User name\r\ncom.company.cinema.screen.login/welcomeLabel = Welcome to Cinema application\r\n\r\ncom.company.cinema.screen.main/application.caption = Cinema application\r\ncom.company.cinema.screen.main/application.logoLabel = Cinema application\r\ncom.company.cinema.screen.main/sideMenuCollapse = Collapse menu\r\ncom.company.cinema.screen.main/logoutBtnDescription = Logout\r\n\r\ncom.company.cinema.screen.seat/seatBrowse.caption=Seats\r\ncom.company.cinema.screen.seat/seatBrowse.menu=Seats\r\ncom.company.cinema.screen.seat/seatEdit.caption=Seat editor\r\n\r\ncom.company.cinema.screen.session/sessionBrowse.caption=Sessions\r\ncom.company.cinema.screen.session/sessionBrowse.menu=Sessions\r\ncom.company.cinema.screen.session/sessionEdit.caption=Session editor\r\n\r\ncom.company.cinema.screen.ticket/ticketBrowse.caption=Tickets\r\ncom.company.cinema.screen.ticket/ticketBrowse.menu=Tickets\r\ncom.company.cinema.screen.ticket/ticketEdit.caption=Ticket editor\r\n\r\ncom.company.cinema.screen.user/UserBrowse.caption=Users\r\ncom.company.cinema.screen.user/UserEdit.caption=User editor\r\ncom.company.cinema.screen.user/additional=Additional\r\ncom.company.cinema.screen.user/confirmPassword=Confirm password\r\ncom.company.cinema.screen.user/passwordsDoNotMatch=Passwords do not match\r\n\r\ncom.company.cinema/menu.application=Application
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/com/company/cinema/messages_ru_RU.properties b/src/main/resources/com/company/cinema/messages_ru_RU.properties
--- a/src/main/resources/com/company/cinema/messages_ru_RU.properties	(revision b1a71be0de7f25e950db8994c6ce6b54bde2c734)
+++ b/src/main/resources/com/company/cinema/messages_ru_RU.properties	(date 1657500128377)
@@ -46,6 +46,8 @@
 com.company.cinema.entity/User.username=Username
 com.company.cinema.entity/User.version=Version
 
+com.company.cinema.screen.blank/blankScreen.caption=Blank screen
+
 com.company.cinema.screen.cinemahall/cinemaHallBrowse.caption=Cinema halls
 com.company.cinema.screen.cinemahall/cinemaHallBrowse.menu=Cinema halls
 com.company.cinema.screen.cinemahall/cinemaHallEdit.caption=Cinema hall editor
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0d1d0646-8985-4226-9406-beb96df3a5fb\" name=\"Changes\" comment=\"Add listener\">\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.4/fileHashes/resourceHashesCache.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.4/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/file-system.probe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/file-system.probe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules/com.company.cinema.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules/com.company.cinema.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/resources/main/META-INF/build-info.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/resources/main/META-INF/build-info.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/company/cinema/listener/SessionEventListener.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/company/cinema/listener/SessionEventListener.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"cinema\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JmixEntity\" />\r\n        <option value=\"JmixLiquibaseChangeLog\" />\r\n        <option value=\"JmixComponentBean\" />\r\n        <option value=\"JmixEntityListener\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GithubDefaultAccount\">\r\n    <option name=\"defaultAccountId\" value=\"ce6e2d8e-6d3b-4477-be6a-8d8323d62d20\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2BDGNhk5db1XTSPlrFYq0HzPjk2\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;com.haulmont.jmixstudio.intellij.ui.cubatree.toolwindow.ToolWindowOpener.firstProjectStart&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Андрей/Desktop/cinema&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;,\r\n    &quot;spring.configuration.checksum&quot;: &quot;363da8a199cfec29823448500da92224&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Gradle.Cinema Jmix Application\">\r\n    <configuration name=\"Cinema Jmix Application\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" isNew=\"false\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"bootRun\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\">\r\n        <option name=\"JmixCleanConf\">\r\n          <option name=\"enabled\" value=\"true\" />\r\n          <option name=\"new\" value=\"false\" />\r\n        </option>\r\n        <option name=\"JmixSyncDb\">\r\n          <option name=\"enabled\" value=\"true\" />\r\n          <option name=\"new\" value=\"false\" />\r\n        </option>\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CinemaApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"com.company.cinema.main\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.company.cinema.CinemaApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"SpringBootOptions\">\r\n    <option name=\"autoCreateRunConfiguration\" value=\"false\" />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0d1d0646-8985-4226-9406-beb96df3a5fb\" name=\"Changes\" comment=\"\" />\r\n      <created>1656433210854</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1656433210854</updated>\r\n      <workItem from=\"1656433212184\" duration=\"5948000\" />\r\n      <workItem from=\"1656587078996\" duration=\"13189000\" />\r\n      <workItem from=\"1656772912723\" duration=\"1283000\" />\r\n      <workItem from=\"1656787770587\" duration=\"73000\" />\r\n      <workItem from=\"1656850662279\" duration=\"2217000\" />\r\n      <workItem from=\"1656855552043\" duration=\"13464000\" />\r\n      <workItem from=\"1656938833352\" duration=\"33000\" />\r\n      <workItem from=\"1656938919415\" duration=\"8950000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Add listener\">\r\n      <created>1656939986997</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656939986997</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"HEAD\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Add listener\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Add listener\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b1a71be0de7f25e950db8994c6ce6b54bde2c734)
+++ b/.idea/workspace.xml	(date 1657499879455)
@@ -4,19 +4,36 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0d1d0646-8985-4226-9406-beb96df3a5fb" name="Changes" comment="Add listener">
+    <list default="true" id="0d1d0646-8985-4226-9406-beb96df3a5fb" name="Changes" comment="Listener - deleting Session">
       <change beforePath="$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.4/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.4/fileHashes/resourceHashesCache.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules/com.company.cinema.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/com.company.cinema.iml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/company/cinema/entity/Session.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/company/cinema/entity/Session.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/company/cinema/entity/Ticket.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/company/cinema/entity/Ticket.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/company/cinema/screen/session/SessionEdit.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/company/cinema/screen/session/SessionEdit.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/resources/main/META-INF/build-info.properties" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/META-INF/build-info.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/com/company/cinema/messages_en.properties" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/com/company/cinema/messages_en.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/com/company/cinema/messages_ru_RU.properties" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/com/company/cinema/messages_ru_RU.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/com/company/cinema/orm.xml" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/com/company/cinema/orm.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/com/company/cinema/persistence.xml" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/com/company/cinema/persistence.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/tmp/entitiesEnhancing/main/persistence/META-INF/persistence.xml" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/entitiesEnhancing/main/persistence/META-INF/persistence.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/tmp/entitiesEnhancing/main/persistence/com/company/cinema/orm.xml" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/entitiesEnhancing/main/persistence/com/company/cinema/orm.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/tmp/entitiesEnhancing/resources/main/com/company/cinema/orm.xml" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/entitiesEnhancing/resources/main/com/company/cinema/orm.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/tmp/entitiesEnhancing/resources/main/com/company/cinema/persistence.xml" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/entitiesEnhancing/resources/main/com/company/cinema/persistence.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/company/cinema/entity/Session.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/company/cinema/entity/Session.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/company/cinema/entity/Ticket.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/company/cinema/entity/Ticket.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/company/cinema/entity/TictetsOnSession.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/company/cinema/entity/TictetsOnSession.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/company/cinema/listener/SessionEventListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/company/cinema/listener/SessionEventListener.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/company/cinema/screen/session/SessionEdit.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/company/cinema/screen/session/SessionEdit.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/com/company/cinema/messages_en.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/company/cinema/messages_en.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/com/company/cinema/messages_ru_RU.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/company/cinema/messages_ru_RU.properties" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -51,15 +68,16 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="JmixEntity" />
         <option value="JmixLiquibaseChangeLog" />
-        <option value="JmixComponentBean" />
         <option value="JmixEntityListener" />
+        <option value="JmixComponentBean" />
+        <option value="JmixEntity" />
       </list>
     </option>
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="RESET_MODE" value="HARD" />
   </component>
   <component name="GithubDefaultAccount">
     <option name="defaultAccountId" value="ce6e2d8e-6d3b-4477-be6a-8d8323d62d20" />
@@ -75,6 +93,10 @@
   </component>
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
+    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
+    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
+    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
+    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
@@ -88,7 +110,7 @@
     &quot;spring.configuration.checksum&quot;: &quot;363da8a199cfec29823448500da92224&quot;
   }
 }</component>
-  <component name="RunManager" selected="Gradle.Cinema Jmix Application">
+  <component name="RunManager" selected="Spring Boot.CinemaApplication">
     <configuration name="Cinema Jmix Application" type="GradleRunConfiguration" factoryName="Gradle" isNew="false">
       <ExternalSystemSettings>
         <option name="executionName" />
@@ -118,6 +140,27 @@
           <option name="new" value="false" />
         </option>
       </method>
+    </configuration>
+    <configuration name="cinema [build]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true" isNew="true">
+      <ExternalSystemSettings>
+        <option name="executionName" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="externalSystemIdString" value="GRADLE" />
+        <option name="scriptParameters" />
+        <option name="taskDescriptions">
+          <list />
+        </option>
+        <option name="taskNames">
+          <list>
+            <option value="build" />
+          </list>
+        </option>
+        <option name="vmOptions" />
+      </ExternalSystemSettings>
+      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
+      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
+      <DebugAllEnabled>false</DebugAllEnabled>
+      <method v="2" />
     </configuration>
     <configuration name="CinemaApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
       <module name="com.company.cinema.main" />
@@ -126,6 +169,11 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Gradle.cinema [build]" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="SpringBootOptions">
@@ -146,6 +194,8 @@
       <workItem from="1656855552043" duration="13464000" />
       <workItem from="1656938833352" duration="33000" />
       <workItem from="1656938919415" duration="8950000" />
+      <workItem from="1657452133258" duration="10719000" />
+      <workItem from="1657490343987" duration="9397000" />
     </task>
     <task id="LOCAL-00001" summary="Add listener">
       <created>1656939986997</created>
@@ -160,6 +210,17 @@
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="Vcs.Log.History.Properties">
+    <option name="COLUMN_ID_ORDER">
+      <list>
+        <option value="Default.Root" />
+        <option value="Default.Author" />
+        <option value="Default.Date" />
+        <option value="Default.Subject" />
+        <option value="Space.CommitStatus" />
+      </list>
+    </option>
+  </component>
   <component name="Vcs.Log.Tabs.Properties">
     <option name="TAB_STATES">
       <map>
@@ -187,4 +248,20 @@
     <MESSAGE value="Add listener" />
     <option name="LAST_COMMIT_MESSAGE" value="Add listener" />
   </component>
+  <component name="XDebuggerManager">
+    <pin-to-top-manager>
+      <pinned-members>
+        <PinnedItemInfo parentTag="com.company.cinema.entity.Seat" memberName="cinemaHall" />
+      </pinned-members>
+    </pin-to-top-manager>
+    <watches-manager>
+      <configuration name="SpringBootApplicationConfigurationType">
+        <watch expression="((java.util.Vector)seatInCinemaHall (slot_2)).get(0)" language="JAVA" custom="java.util.Vector" />
+        <watch expression="((java.util.Vector)seatInCinemaHall (slot_2)).get(0)" custom="java.util.Vector" />
+        <watch expression="((java.util.Vector)seatInCinemaHall (slot_2)).get(0)" custom="java.util.Vector" />
+        <watch expression="((java.util.Vector)seatInCinemaHall (slot_2)).get(0)" custom="java.util.Vector" />
+        <watch expression="this" />
+      </configuration>
+    </watches-manager>
+  </component>
 </project>
\ No newline at end of file
Index: build/resources/main/com/company/cinema/messages_en.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>localeDisplayName.en=English\r\n\r\ndatabaseUniqueConstraintViolation.IDX_USER__ON_USERNAME=A user with the same username already exists\r\n\r\ncom.company.cinema.entity/CinemaHall=Cinema hall\r\ncom.company.cinema.entity/CinemaHall.description=Description\r\ncom.company.cinema.entity/CinemaHall.id=Id\r\ncom.company.cinema.entity/CinemaHall.name=Name\r\ncom.company.cinema.entity/Client=Client\r\ncom.company.cinema.entity/Client.fullName=Full name\r\ncom.company.cinema.entity/Client.id=Id\r\ncom.company.cinema.entity/Client.listOfTikets=List of tikets\r\ncom.company.cinema.entity/Client.ticket=Ticket\r\ncom.company.cinema.entity/Film=Film\r\ncom.company.cinema.entity/Film.description=Description\r\ncom.company.cinema.entity/Film.duration=Duration\r\ncom.company.cinema.entity/Film.id=Id\r\ncom.company.cinema.entity/Film.name=Name\r\ncom.company.cinema.entity/Seat=Seat\r\ncom.company.cinema.entity/Seat.cinemaHall=Cinema hall\r\ncom.company.cinema.entity/Seat.cinema_hall=Cinema hall\r\ncom.company.cinema.entity/Seat.default_cost=Default cost\r\ncom.company.cinema.entity/Seat.id=Id\r\ncom.company.cinema.entity/Seat.place_number=Place number\r\ncom.company.cinema.entity/Seat.row_number=Row number\r\ncom.company.cinema.entity/Session=Session\r\ncom.company.cinema.entity/Session.cinemaHall=Cinema hall\r\ncom.company.cinema.entity/Session.endTime=End time\r\ncom.company.cinema.entity/Session.film=Film\r\ncom.company.cinema.entity/Session.id=Id\r\ncom.company.cinema.entity/Session.startTime=Start time\r\ncom.company.cinema.entity/Ticket=Ticket\r\ncom.company.cinema.entity/Ticket.client=Client\r\ncom.company.cinema.entity/Ticket.cost=Cost\r\ncom.company.cinema.entity/Ticket.id=Id\r\ncom.company.cinema.entity/Ticket.seat=Seat\r\ncom.company.cinema.entity/Ticket.session=Session\r\ncom.company.cinema.entity/User=User\r\ncom.company.cinema.entity/User.active=Active\r\ncom.company.cinema.entity/User.email=Email\r\ncom.company.cinema.entity/User.firstName=First name\r\ncom.company.cinema.entity/User.id=ID\r\ncom.company.cinema.entity/User.lastName=Last name\r\ncom.company.cinema.entity/User.password=Password\r\ncom.company.cinema.entity/User.timeZoneId=Time zone\r\ncom.company.cinema.entity/User.username=Username\r\ncom.company.cinema.entity/User.version=Version\r\n\r\ncom.company.cinema.screen.cinemahall/cinemaHallBrowse.caption=Cinema halls\r\ncom.company.cinema.screen.cinemahall/cinemaHallBrowse.menu=Cinema halls\r\ncom.company.cinema.screen.cinemahall/cinemaHallEdit.caption=Cinema hall editor\r\n\r\ncom.company.cinema.screen.client/clientBrowse.caption=Clients\r\ncom.company.cinema.screen.client/clientBrowse.menu=Clients\r\ncom.company.cinema.screen.client/clientEdit.caption=Client editor\r\n\r\ncom.company.cinema.screen.film/filmBrowse.caption=Films\r\ncom.company.cinema.screen.film/filmBrowse.menu=Films\r\ncom.company.cinema.screen.film/filmEdit.caption=Film editor\r\n\r\ncom.company.cinema.screen.login/badCredentials = Unknown login name or bad password\r\ncom.company.cinema.screen.login/caption = Sample\r\ncom.company.cinema.screen.login/emptyUsernameOrPassword=Please enter user name and password\r\ncom.company.cinema.screen.login/loginButton = Submit\r\ncom.company.cinema.screen.login/loginFailed = Login failed\r\ncom.company.cinema.screen.login/loginScreen.rememberMe=Remember me\r\ncom.company.cinema.screen.login/passwordPlaceholder = Password\r\ncom.company.cinema.screen.login/usernamePlaceholder = User name\r\ncom.company.cinema.screen.login/welcomeLabel = Welcome to Cinema application\r\n\r\ncom.company.cinema.screen.main/application.caption = Cinema application\r\ncom.company.cinema.screen.main/application.logoLabel = Cinema application\r\ncom.company.cinema.screen.main/sideMenuCollapse = Collapse menu\r\ncom.company.cinema.screen.main/logoutBtnDescription = Logout\r\n\r\n\r\n\r\ncom.company.cinema.screen.seat/seatBrowse.caption=Seats\r\ncom.company.cinema.screen.seat/seatBrowse.menu=Seats\r\ncom.company.cinema.screen.seat/seatEdit.caption=Seat editor\r\n\r\ncom.company.cinema.screen.session/sessionBrowse.caption=Sessions\r\ncom.company.cinema.screen.session/sessionBrowse.menu=Sessions\r\ncom.company.cinema.screen.session/sessionEdit.caption=Session editor\r\n\r\ncom.company.cinema.screen.ticket/ticketBrowse.caption=Tickets\r\ncom.company.cinema.screen.ticket/ticketBrowse.menu=Tickets\r\ncom.company.cinema.screen.ticket/ticketEdit.caption=Ticket editor\r\n\r\ncom.company.cinema.screen.user/UserBrowse.caption=Users\r\ncom.company.cinema.screen.user/UserEdit.caption=User editor\r\ncom.company.cinema.screen.user/additional=Additional\r\ncom.company.cinema.screen.user/confirmPassword=Confirm password\r\ncom.company.cinema.screen.user/passwordsDoNotMatch=Passwords do not match\r\n\r\ncom.company.cinema/menu.application=Application
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build/resources/main/com/company/cinema/messages_en.properties b/build/resources/main/com/company/cinema/messages_en.properties
--- a/build/resources/main/com/company/cinema/messages_en.properties	(revision b1a71be0de7f25e950db8994c6ce6b54bde2c734)
+++ b/build/resources/main/com/company/cinema/messages_en.properties	(date 1657499503498)
@@ -32,6 +32,8 @@
 com.company.cinema.entity/Ticket=Ticket
 com.company.cinema.entity/Ticket.client=Client
 com.company.cinema.entity/Ticket.cost=Cost
+com.company.cinema.entity/Ticket.deletedBy=Deleted by
+com.company.cinema.entity/Ticket.deletedDate=Deleted date
 com.company.cinema.entity/Ticket.id=Id
 com.company.cinema.entity/Ticket.seat=Seat
 com.company.cinema.entity/Ticket.session=Session
Index: build/resources/main/com/company/cinema/messages_ru_RU.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>localeDisplayName.ru_RU=Russian (Russia)\r\n\r\ndatabaseUniqueConstraintViolation.IDX_USER__ON_USERNAME=A user with the same username already exists\r\n\r\ncom.company.cinema.entity/CinemaHall=Cinema hall\r\ncom.company.cinema.entity/CinemaHall.description=Description\r\ncom.company.cinema.entity/CinemaHall.id=Id\r\ncom.company.cinema.entity/CinemaHall.name=Name\r\ncom.company.cinema.entity/Client=Client\r\ncom.company.cinema.entity/Client.fullName=Full name\r\ncom.company.cinema.entity/Client.id=Id\r\ncom.company.cinema.entity/Client.listOfTikets=List of tikets\r\ncom.company.cinema.entity/Client.ticket=Ticket\r\ncom.company.cinema.entity/Film=Фильм\r\ncom.company.cinema.entity/Film.description=Description\r\ncom.company.cinema.entity/Film.duration=Duration\r\ncom.company.cinema.entity/Film.id=Id\r\ncom.company.cinema.entity/Film.name=Name\r\ncom.company.cinema.entity/Seat=Seat\r\ncom.company.cinema.entity/Seat.cinemaHall=Cinema hall\r\ncom.company.cinema.entity/Seat.cinema_hall=Cinema hall\r\ncom.company.cinema.entity/Seat.default_cost=Default cost\r\ncom.company.cinema.entity/Seat.id=Id\r\ncom.company.cinema.entity/Seat.place_number=Place number\r\ncom.company.cinema.entity/Seat.row_number=Row number\r\ncom.company.cinema.entity/Session=Сеанс\r\ncom.company.cinema.entity/Session.cinemaHall=Кинозал\r\ncom.company.cinema.entity/Session.endTime=End time\r\ncom.company.cinema.entity/Session.film=Film\r\ncom.company.cinema.entity/Session.id=Id\r\ncom.company.cinema.entity/Session.startTime=Start time\r\ncom.company.cinema.entity/Ticket=Ticket\r\ncom.company.cinema.entity/Ticket.client=Client\r\ncom.company.cinema.entity/Ticket.cost=Cost\r\ncom.company.cinema.entity/Ticket.id=Id\r\ncom.company.cinema.entity/Ticket.seat=Seat\r\ncom.company.cinema.entity/Ticket.session=Session\r\ncom.company.cinema.entity/User=User\r\ncom.company.cinema.entity/User.active=Active\r\ncom.company.cinema.entity/User.email=Email\r\ncom.company.cinema.entity/User.firstName=First name\r\ncom.company.cinema.entity/User.id=ID\r\ncom.company.cinema.entity/User.lastName=Last name\r\ncom.company.cinema.entity/User.password=Password\r\ncom.company.cinema.entity/User.timeZoneId=Time zone\r\ncom.company.cinema.entity/User.username=Username\r\ncom.company.cinema.entity/User.version=Version\r\n\r\ncom.company.cinema.screen.cinemahall/cinemaHallBrowse.caption=Cinema halls\r\ncom.company.cinema.screen.cinemahall/cinemaHallBrowse.menu=Cinema halls\r\ncom.company.cinema.screen.cinemahall/cinemaHallEdit.caption=Cinema hall editor\r\n\r\ncom.company.cinema.screen.client/clientBrowse.caption=Clients\r\ncom.company.cinema.screen.client/clientBrowse.menu=Clients\r\ncom.company.cinema.screen.client/clientEdit.caption=Client editor\r\n\r\ncom.company.cinema.screen.film/filmBrowse.caption=Films\r\ncom.company.cinema.screen.film/filmBrowse.menu=Films\r\ncom.company.cinema.screen.film/filmEdit.caption=Film editor\r\n\r\ncom.company.cinema.screen.login/badCredentials = Unknown login name or bad password\r\ncom.company.cinema.screen.login/caption = Sample\r\ncom.company.cinema.screen.login/emptyUsernameOrPassword=Please enter user name and password\r\ncom.company.cinema.screen.login/loginButton = Submit\r\ncom.company.cinema.screen.login/loginFailed = Login failed\r\ncom.company.cinema.screen.login/loginScreen.rememberMe=Remember me\r\ncom.company.cinema.screen.login/passwordPlaceholder = Password\r\ncom.company.cinema.screen.login/usernamePlaceholder = User name\r\ncom.company.cinema.screen.login/welcomeLabel = Welcome to Cinema application\r\n\r\ncom.company.cinema.screen.main/application.caption = Cinema application\r\ncom.company.cinema.screen.main/application.logoLabel = Cinema application\r\ncom.company.cinema.screen.main/sideMenuCollapse = Collapse menu\r\ncom.company.cinema.screen.main/logoutBtnDescription = Logout\r\n\r\ncom.company.cinema.screen.seat/seatBrowse.caption=Seats\r\ncom.company.cinema.screen.seat/seatBrowse.menu=Seats\r\ncom.company.cinema.screen.seat/seatEdit.caption=Seat editor\r\n\r\ncom.company.cinema.screen.session/sessionBrowse.caption=Sessions\r\ncom.company.cinema.screen.session/sessionBrowse.menu=Sessions\r\ncom.company.cinema.screen.session/sessionEdit.caption=Session editor\r\n\r\ncom.company.cinema.screen.ticket/ticketBrowse.caption=Tickets\r\ncom.company.cinema.screen.ticket/ticketBrowse.menu=Tickets\r\ncom.company.cinema.screen.ticket/ticketEdit.caption=Ticket editor\r\n\r\ncom.company.cinema.screen.user/UserBrowse.caption=Users\r\ncom.company.cinema.screen.user/UserEdit.caption=User editor\r\ncom.company.cinema.screen.user/additional=Additional\r\ncom.company.cinema.screen.user/confirmPassword=Confirm password\r\ncom.company.cinema.screen.user/passwordsDoNotMatch=Passwords do not match\r\n\r\ncom.company.cinema/menu.application=Application
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build/resources/main/com/company/cinema/messages_ru_RU.properties b/build/resources/main/com/company/cinema/messages_ru_RU.properties
--- a/build/resources/main/com/company/cinema/messages_ru_RU.properties	(revision b1a71be0de7f25e950db8994c6ce6b54bde2c734)
+++ b/build/resources/main/com/company/cinema/messages_ru_RU.properties	(date 1657499503499)
@@ -32,6 +32,8 @@
 com.company.cinema.entity/Ticket=Ticket
 com.company.cinema.entity/Ticket.client=Client
 com.company.cinema.entity/Ticket.cost=Cost
+com.company.cinema.entity/Ticket.deletedBy=Deleted by
+com.company.cinema.entity/Ticket.deletedDate=Deleted date
 com.company.cinema.entity/Ticket.id=Id
 com.company.cinema.entity/Ticket.seat=Seat
 com.company.cinema.entity/Ticket.session=Session
